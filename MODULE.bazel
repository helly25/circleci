# SPDX-FileCopyrightText: Copyright (c) The helly25/mbo authors (helly25.com)
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""CircleCI API command line tools."""

module(
    name = "circleci",
    repo_name = "com_helly25_circleci",
    version = "0.0.0",
)

bazel_dep(name = "rules_python", version = "0.27.1")
bazel_dep(name = "bazel_skylib", version = "1.6.1")
bazel_dep(name = "buildifier_prebuilt", version = "6.4.0", dev_dependency = True)

# Once there is a Bazel module:
#bazel_dep(name = "bazel-mypy-integration", version = "0.27.1")

python = use_extension(
    "@rules_python//python/extensions:python.bzl",
    "python",
    dev_dependency = True,
)
python.toolchain(python_version = "3.11")

pip = use_extension(
    "@rules_python//python/extensions:pip.bzl",
    "pip",
    dev_dependency = True,
)
pip.parse(
    hub_name = "mypy_integration_pip_deps",
    python_version = "3.11",
    requirements_lock = "//third_party:requirements.txt",
)
use_repo(pip, "mypy_integration_pip_deps")

#non_module_dependencies = use_extension("//:extensions.bzl", "non_module_dependencies")
#use_repo(non_module_dependencies, "mypy_integration")
#
#mypy_integration_repositories = use_extension(
#    "@mypy_integration//repositories:repositories.bzl",
#    "repositories",
#    dev_dependency = True,
#)
#mypy_integration_repositories.repositories()
#
#mypy_integration_configuration = use_extension(
#    "//mypy_integration:config.bzl",
#    "mypy_configuration",
#)
#
#mypy_integration_configuration.mypy_configuration()
#
# Optionally pass a MyPy config file, otherwise pass no argument.
#mypy_configuration("//tools/typing:mypy.ini")
#
#mypy_integration_deps = use_extension(
#    "//mypy_integration/repositories:deps.bzl",
#    "deps",
#)
#
#mypy_integration_deps.deps(
#    mypy_requirements_file="//tools/typing:mypy_version.txt",
#    # python_interpreter_target = "@python3_interpreter//:bin/python3",
#)
